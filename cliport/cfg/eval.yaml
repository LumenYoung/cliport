# Evaluation

defaults:
  - config

hydra:
  run:
    dir: ${root_dir}

mode: val # 'val' or 'test'

# eval settings
agent: cliport
n_demos: 100 # number of val instances
train_demos: 1000 # training demos used to train model
n_repeats: 1 # number of repeats
gpu: [0]
save_results: True # write results to json
update_results: False # overwrite existing json results?
checkpoint_type: 'val_missing'
val_on_heldout: True

# lumen experiment variables ------------------------------------------------------------

feedback: False
feedback_agent: "llava" # options: cogvlm llava
compact_curr_mem: True
feedback_use_gt_label: False
feedback_n_examples: 3

vector_base: "exp1_base"
vector_base_control: True
vector_base_source: "exp1_base-b"

correction: True
correction_agent: "llava"
correction_feedback: True
correction_feedback_n_examples: 5
correction_feedback_use_gt_label: True
correction_feedback_agent: "llava" # options: cogvlm llava
correction_n_examples: 5
correction_judge_n_examples: 8

llm_embedding_url:  "http://pearl9.informatik.privat:6000/embedding"
llm_server_url:  "http://pearl9.informatik.privat:6000/conversation"

exp_no_threshold: False

compare_logging: True
compare_logging_path: "/home/yang/cliport/logs"

memory_storage_dir: /home/yang/memory_storage
cli_img: False
disp: False
shared_memory: False
eval_task: packing-boxes-pairs-seen-colors # task to evaluate the model on
model_task: ${eval_task} # task the model was trained on (e.g. multi-language-conditioned or packing-boxes-pairs-seen-colors)
type: single # 'single' or 'multi'

  
# end lumen experiment variables --------------------------------------------------------

# paths
model_dir: ${root_dir}
exp_folder: exps
data_dir: ${root_dir}/data
assets_root: ${root_dir}/cliport/environments/assets/

model_path: ${model_dir}/${exp_folder}/${model_task}-${agent}-n${train_demos}-train/checkpoints/ # path to pre-trained models
train_config: ${model_dir}/${exp_folder}/${model_task}-${agent}-n${train_demos}-train/.hydra/config.yaml # path to train config
save_path: ${model_dir}/${exp_folder}/${eval_task}-${agent}-n${train_demos}-train/checkpoints/ # path to save results
results_path: ${model_dir}/${exp_folder}/${eval_task}-${agent}-n${train_demos}-train/checkpoints/ # path to existing results


# record videos (super slow)
record:
  save_video: True
  save_video_path: ${model_dir}/${exp_folder}/${eval_task}-${agent}-n${train_demos}-train/videos/
  add_text: True
  fps: 20
  video_height: 640
  video_width: 720
